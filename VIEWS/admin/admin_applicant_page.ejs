<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <script src="/function/Babel.js"></script>
    <script src="/function/React.js"></script>
    <script src="/function/ReactDOM.js"></script>
    <link rel="shortcut icon" href="/PUBLIC/ASSETS/IMAGES/favicon.png" type="image/x-icon">
    <link rel="stylesheet" href="/PUBLIC/CSS/recruiter_style.css">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script crossorigin src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <title>Admin Dashboard | Everything.india</title>
</head>
<body>
    <section class="admin-section">
        <nav class="admin-navigation" id="sidenavbar"></nav>
        
        <div class="admin-main-container">
            <header class="admin-header" id="admin_header"></header>
            <div class="admin-content" id="content-container"></div>
            <footer>
                <div class="footerContainer" id="footer"></div>
            </footer>
        </div>
    </section>
    
    <script type="text/babel" src="/PUBLIC/components/AdminSideNavBar.js"></script>
    <script type="text/babel" src="/PUBLIC/components/RecruiterHeader.js"></script>
    <script type="text/babel" src="/PUBLIC/COMPONENTS/RecruiterFooter.js"></script>

    <script type="text/babel">
        const profilePic = "user.png";

        const { useState, useEffect } = React;
        function AdminDashboard() {
            const [userList, setUserList] = useState([]);
            const [statusFilter, setStatusFilter] = useState("");
            const [currentPage, setCurrentPage] = useState(1);
            const itemsPerPage = 10;

            const BASE_URL = window.location.hostname === 'localhost' ? 'http://localhost:5000' : 'https://your-vercel-url.vercel.app';

            useEffect(() => {
                fetchUserData();
            }, []);

            const fetchUserData = () => {
                axios.get(`${BASE_URL}/api/admin/users`, {
                    credentials: "include",
                })
                    .then(response => setUserList(response.data))
                    .catch(error => console.error("Error fetching users:", error));
            };

            const applyFilter = () => {
                axios.get(`${BASE_URL}/api/admin/filter-users`, {
                    credentials: "include",
                })
                    .then(response => {
                        setUserList(response.data);
                        setCurrentPage(1);
                    })
                    .catch(error => console.error('Error applying filters:', error));
            };

            const handleStatusChange = (event) => {
                setStatusFilter(event.target.value);
            };

            const handleFilterSubmit = (event) => {
                event.preventDefault();
                applyFilter();
            };

            const indexOfLastUser = currentPage * itemsPerPage;
            const indexOfFirstUser = indexOfLastUser - itemsPerPage;
            const currentUsers = userList.slice(indexOfFirstUser, indexOfLastUser);
            const totalPages = Math.ceil(userList.length / itemsPerPage);

            return (
                <>
                    <div className="filter-box">
                        <select className="filter-select" value={statusFilter} onChange={handleStatusChange}>
                            <option value="">Select Status</option>
                            <option value="active">Active</option>
                            <option value="inactive">Inactive</option>
                        </select>
                        <button className="apply-btn" onClick={handleFilterSubmit}>Apply</button>
                        <button className="clear-btn" onClick={() => setStatusFilter("")}>Clear</button>
                    </div>

                    <table className="user-table">
                        <thead>
                            <tr>
                                <th>Profile</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {currentUsers.map((user, index) => (
                                <tr key={index}>
                                    <td><img className="profile-pic" src={`/uploads/${user.profilePic}`} alt="Profile" /></td>
                                    <td>{user.name}</td>
                                    <td>{user.email}</td>
                                    <td className={user.isActive ? "status-active" : "status-inactive"}>{user.isActive ? "Active" : "Inactive"}</td>
                                    <td>
                                        <a href={`/api/admin/toggleStatus?userId=${user.id}`} className="action-btn">{user.isActive ? "Deactivate" : "Activate"}</a>
                                        <a href={`/api/admin/userDetails?userId=${user.id}`} className="view-btn">View</a>
                                        <a href={`/api/admin/deleteUser?userId=${user.id}`} className="delete-btn"><i className="fa fa-trash"></i></a>
                                    </td>
                                </tr>
                            ))}
                        </tbody>
                    </table>

                    <div className="pagination">
                        {Array.from({ length: totalPages }, (_, index) => (
                            <button
                                key={index}
                                className={`page-btn ${currentPage === index + 1 ? 'active' : ''}`}
                                onClick={() => setCurrentPage(index + 1)}
                            >
                                {index + 1}
                            </button>
                        ))}
                    </div>
                </>
            );
        }

        ReactDOM.createRoot(document.getElementById('sidenavbar')).render(<AdminSideNavBar />);
        ReactDOM.createRoot(document.getElementById('admin_header')).render(<RecruiterHeader profilePic={profilePic} title='Admin Dashboard' />);
        ReactDOM.createRoot(document.getElementById('content-container')).render(<AdminDashboard />);
        ReactDOM.createRoot(document.getElementById('footer')).render(<RecruiterFooter />);
    </script>
</body>
</html>
